name: "pytest"
on:
  push:
    branches:
      - main
      - 'staging/*'
  pull_request_target:
    branches:
      - main
      - 'staging/*'

jobs:
  pytest:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]
        os: [ ubuntu-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        shell: bash
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PYTEST_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PYTEST_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Download  & Test with pytest
        run: |
          LOCAL_DATASET_PATH=$(mktemp -d)
          aws s3 sync '${{ secrets.DGP_DATASET_PATH }}' "$LOCAL_DATASET_PATH" --only-show-errors
          DGP_PATH="$LOCAL_DATASET_PATH" SKIP_ENCODER=1 SKIP_CACHE=1 pytest --verbose
        shell: bash
        env:
          CITYSCAPES_PATH_ENV: ${{ secrets.CITYSCAPES_PATH_ENV }}
          FLYING_CHAIRS_DATASET_PATH_ENV: ${{ secrets.FLYING_CHAIRS_DATASET_PATH_ENV }}
          GTA5_PATH_ENV: ${{ secrets.GTA5_PATH_ENV }}
          KITTI_FLOW_DATASET_PATH_ENV: ${{ secrets.KITTI_FLOW_DATASET_PATH_ENV }}
          NUIMAGES_PATH_ENV: ${{ secrets.NUIMAGES_PATH_ENV }}
          NUSCENES_MINI_PATH_ENV: ${{ secrets.NUSCENES_MINI_PATH_ENV }}
          NUSCENES_TRAINVAL_PATH_ENV: ${{ secrets.NUSCENES_TRAINVAL_PATH_ENV }}
