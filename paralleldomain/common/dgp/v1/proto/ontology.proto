// Definitions for OntologyItem and Ontology.
// OntologyItem and Ontology are defined in an Object Oriented way for the ease of downstream
// consumption. Ontology is simply a collection of multiple OntologyItems that contain all
// all property fields that represent a category/concept.

syntax = "proto3";

// TODO: move package back to dgp.proto once dataset_pb2 is deprecated.
package dgp.proto.v2;

// An Ontology represents a set of unique concepts/categories that expresses their properties.
// An OntologyItem defines a single, unique element within in an Ontology.
message OntologyItem {
  // OntologyItem name. For e.g., 'Vehicle', 'Truck', 'Pedestrian', etc.
  string name = 1;

  // OntologyItem id.
  // Note: Downstream consumption code ought to assert if every OntologyItem.id is
  // unique in an Ontology.
  uint32 id = 2;

  // RGB color code to colorize a bounding_box, pixel, mask, etc of this OntologyItem
  // in the visualization tool.
  message Color {
    uint32 r = 1;
    uint32 g = 2;
    uint32 b = 3;
  }
  // OntologyItem RGB color code.
  Color color = 3;

  // True if this OntologyItem is a countable object such as people, car, etc.
  // False if this OntologyItem is an amorphous region without instance-level annotation of
  // similar texture such as road, sky, etc.
  bool isthing = 4;

  // Name of the parent OntologyItem.
  string supercategory = 5;
}

// Ontology for dgp.proto.Scene.
message Ontology {
  // List of OntologyItems.
  repeated OntologyItem items = 1;
}
